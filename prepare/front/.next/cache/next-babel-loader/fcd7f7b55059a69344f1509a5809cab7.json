{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view/BN001998.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      content: '우와 댓글1번'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'ky.song'\n      },\n      content: '사고싶어어요용여영영ㅇ'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    }\n  };\n}; // 이전상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성을 지키면서)\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        console.log('post', action.data);\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          // immer사용 안할때\n          // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/syjoo/Desktop/personal/react-nodebrid/prepare/front/reducers/post.js"],"names":["shortId","produce","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","postAdded","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","unshift","error","console","log","filter","v","post","find","postId"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\nimport produce from 'immer';\r\n\r\nexport const initialState = {\r\n  mainPosts: [{\r\n    id: 1,\r\n    User: {\r\n      id: 1,\r\n      nickname: '제로초',\r\n    },\r\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\r\n    Images: [{\r\n      id: shortId.generate(),\r\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n    }, {\r\n      id: shortId.generate(),\r\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n    }, {\r\n      id: shortId.generate(),\r\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view/BN001998.jpg',\r\n    }],\r\n    Comments: [{\r\n      id: shortId.generate(),\r\n      User: {\r\n        id: shortId.generate(),\r\n        nickname: 'nero',\r\n      },\r\n      content: '우와 댓글1번',\r\n    }, {\r\n      id: shortId.generate(),\r\n      User: {\r\n        id: shortId.generate(),\r\n        nickname: 'ky.song',\r\n      },\r\n      content: '사고싶어어요용여영영ㅇ',\r\n    }],\r\n  }],\r\n  imagePaths: [],\r\n  postAdded: false,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: '제로초',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: '제로초',\r\n  },\r\n});\r\n\r\n// 이전상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성을 지키면서)\r\nconst reducer = (state = initialState, action) => (\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(dummyPost(action.data));\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        console.log('post', action.data);\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        // immer사용 안할때\r\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n        post.Comments.unshift(dummyComment(action.data.content));\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  })\r\n);\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}