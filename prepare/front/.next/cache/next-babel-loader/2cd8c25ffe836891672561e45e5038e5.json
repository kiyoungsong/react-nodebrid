{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\syjoo\\\\Desktop\\\\personal\\\\react-nodebrid\\\\prepare\\\\front\\\\components\\\\FollowButton.js\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FollowButton = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    followLoading,\n    unFollowLoading\n  } = useSelector(state => state.user); // 팔로잉사람 목록중에 게시글 작성자의 id가 있으면\n\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST\n      });\n    } else {\n      dispatch({\n        tpye: FOLLOW_REQUEST\n      });\n    }\n  }, [isFollowing]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    loading: followLoading || unFollowLoading,\n    onClick: onClickButton,\n    type: \"button\",\n    children: isFollowing ? '언팔로우' : '팔로우'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default FollowButton;","map":{"version":3,"sources":["C:/Users/syjoo/Desktop/personal/react-nodebrid/prepare/front/components/FollowButton.js"],"names":["React","useCallback","PropTypes","Button","useDispatch","useSelector","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","dispatch","me","followLoading","unFollowLoading","state","user","isFollowing","Followings","find","v","id","User","onClickButton","type","tpye","propTypes","shape","number","object","content","string","createdAt","Comments","arrayOf","Images","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,EAAF;AAAMC,IAAAA,aAAN;AAAqBC,IAAAA;AAArB,MAAyCR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1D,CAFiC,CAGjC;;AACA,QAAMC,WAAW,GAAGL,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEM,UAAJ,CAAeC,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA9C,CAApB;AACA,QAAME,aAAa,GAAGrB,WAAW,CAAC,MAAM;AACtC,QAAIe,WAAJ,EAAiB;AACfN,MAAAA,QAAQ,CAAC;AACPa,QAAAA,IAAI,EAAEhB;AADC,OAAD,CAAR;AAGD,KAJD,MAIO;AACLG,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAElB;AADC,OAAD,CAAR;AAGD;AACF,GAVgC,EAU9B,CAACU,WAAD,CAV8B,CAAjC;AAYA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,aAAa,IAAIC,eAAlC;AAAmD,IAAA,OAAO,EAAES,aAA5D;AAA2E,IAAA,IAAI,EAAC,QAAhF;AAAA,cACGN,WAAW,GAAG,MAAH,GAAY;AAD1B;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;AAwBAR,YAAY,CAACiB,SAAb,GAAyB;AACvBhB,EAAAA,IAAI,EAAEP,SAAS,CAACwB,KAAV,CAAgB;AACpBN,IAAAA,EAAE,EAAElB,SAAS,CAACyB,MADM;AAEpBN,IAAAA,IAAI,EAAEnB,SAAS,CAAC0B,MAFI;AAGpBC,IAAAA,OAAO,EAAE3B,SAAS,CAAC4B,MAHC;AAIpBC,IAAAA,SAAS,EAAE7B,SAAS,CAAC0B,MAJD;AAKpBI,IAAAA,QAAQ,EAAE9B,SAAS,CAAC+B,OAAV,CAAkB/B,SAAS,CAAC0B,MAA5B,CALU;AAMpBM,IAAAA,MAAM,EAAEhC,SAAS,CAAC+B,OAAV,CAAkB/B,SAAS,CAAC0B,MAA5B;AANY,GAAhB,EAOHO;AARoB,CAAzB;AAWA,eAAe3B,YAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\nconst FollowButton = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const { me, followLoading, unFollowLoading } = useSelector((state) => state.user);\r\n  // 팔로잉사람 목록중에 게시글 작성자의 id가 있으면\r\n  const isFollowing = me?.Followings.find((v) => v.id === post.User.id);\r\n  const onClickButton = useCallback(() => {\r\n    if (isFollowing) {\r\n      dispatch({\r\n        type: UNFOLLOW_REQUEST,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        tpye: FOLLOW_REQUEST,\r\n      });\r\n    }\r\n  }, [isFollowing]);\r\n\r\n  return (\r\n    <Button loading={followLoading || unFollowLoading} onClick={onClickButton} type=\"button\">\r\n      {isFollowing ? '언팔로우' : '팔로우'}\r\n    </Button>\r\n  );\r\n};\r\n\r\nFollowButton.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default FollowButton;\r\n"]},"metadata":{},"sourceType":"module"}