{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from \"axios\";\nimport { POST_ADD_SUCCESS } from '../reducers/post';\n\nfunction postAddAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* postAdd(action) {\n  try {\n    // const result = yield call(postAddAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: POST_ADD_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: POST_ADD_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, postAdd);\n}\n\nexport default function* postSage() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/syjoo/Desktop/personal/react-nodebrid/prepare/front/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","axios","POST_ADD_SUCCESS","postAddAPI","data","post","postAdd","action","type","err","POST_ADD_FAILURE","response","watchAddPost","ADD_POST_REQUEST","postSage"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOH,KAAK,CAACI,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAG;AACC;AACA,UAAMP,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEN;AADA,KAAD,CAAT;AAGH,GAND,CAMC,OAAMO,GAAN,EAAU;AACP,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEE,gBADA;AAENN,MAAAA,IAAI,EAAEK,GAAG,CAACE,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUQ,YAAV,GAAwB;AACpB,QAAMb,UAAU,CAACc,gBAAD,EAAmBP,OAAnB,CAAhB;AACH;;AAED,eAAe,UAAUQ,QAAV,GAAoB;AAC/B,QAAMlB,GAAG,CAAC,CACNC,IAAI,CAACe,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\r\nimport axios from \"axios\";\r\n\r\nimport { POST_ADD_SUCCESS } from '../reducers/post';\r\n\r\nfunction postAddAPI(data){\r\n    return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* postAdd(action){\r\n    try{\r\n        // const result = yield call(postAddAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: POST_ADD_SUCCESS,\r\n        });\r\n    }catch(err){\r\n        yield put({\r\n            type: POST_ADD_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST, postAdd);\r\n}\r\n\r\nexport default function* postSage(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}