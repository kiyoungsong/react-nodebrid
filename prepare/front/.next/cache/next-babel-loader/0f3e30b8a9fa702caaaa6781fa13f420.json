{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  // if(typeof action === 'function'){\n  //     return action(dispatch, getState);\n  // }\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleweares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middleweares)) : composeWithDevTools(applyMiddleware(...middleweares));\n  const stroe = createStore(reducer, enhancer);\n  stroe.sagaTask = sagaMiddleware.run(rootSaga);\n  return stroe;\n}; // Debus를 true하면 좀더 자세하게 찍어줌\n\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/syjoo/Desktop/personal/react-nodebrid/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","configureStore","sagaMiddleware","middleweares","enhancer","stroe","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAGA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA2BC,IAAD,IAAWC,MAAD,IAAW;AACpE;AACA;AACA;AAEA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAND;;AAQA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,cAAc,GAAGT,oBAAoB,EAA3C;AACA,QAAMU,YAAY,GAAG,CAACD,cAAD,EAAiBN,gBAAjB,CAArB;AACA,QAAMQ,QAAQ,GAAG,QACfb,OAAO,CAACF,eAAe,CAAC,GAAGc,YAAJ,CAAhB,CADQ,GAEfX,mBAAmB,CAACH,eAAe,CAAC,GAAGc,YAAJ,CAAhB,CAFrB;AAGA,QAAME,KAAK,GAAGf,WAAW,CAACI,OAAD,EAAUU,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBZ,QAAnB,CAAjB;AACA,SAAOU,KAAP;AACH,CATD,C,CAWA;;;AACA,MAAMG,OAAO,GAAGpB,aAAa,CAACa,cAAD,EAAiB;AAACQ,EAAAA,KAAK;AAAN,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport {applyMiddleware, createStore, compose} from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers'\nimport rootSaga from '../sagas'\n\n\nconst loggerMiddleware = ({dispatch, getState}) => (next) => (action) =>{\n    // if(typeof action === 'function'){\n    //     return action(dispatch, getState);\n    // }\n\n    return next(action);\n}\n\nconst configureStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middleweares = [sagaMiddleware, loggerMiddleware];\n    const enhancer = process.env.NODE_ENV === 'production' \n    ? compose(applyMiddleware(...middleweares)) \n    : composeWithDevTools(applyMiddleware(...middleweares)) \n    const stroe = createStore(reducer, enhancer);\n    stroe.sagaTask = sagaMiddleware.run(rootSaga);\n    return stroe;\n};\n\n// Debus를 true하면 좀더 자세하게 찍어줌\nconst wrapper = createWrapper(configureStore, {debug: process.env.NODE_ENV == 'development',});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}