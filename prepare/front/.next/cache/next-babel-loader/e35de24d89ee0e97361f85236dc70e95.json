{"ast":null,"code":"import { all, fork, put, delay, takeLatest } from \"@redux-saga/core/effects\";\nimport axios from \"axios\";\n\nfunction postAddAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* postAdd(action) {\n  try {\n    yield put({\n      type: 'POST_ADD_REQUEST'\n    }); // const result = yield call(postAddAPI, action.data);\n\n    yield delay(1000);\n    yield put({\n      type: 'POST_ADD_SUCCESS' // data: result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'POST_ADD_FAILURE' // data: err.response.data\n\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', postAdd);\n}\n\nexport default function* postSage() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/syjoo/Desktop/personal/react-nodebrid/prepare/front/sagas/post.js"],"names":["all","fork","put","delay","takeLatest","axios","postAddAPI","data","post","postAdd","action","type","err","watchAddPost","postSage"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,UAAhC,QAAkD,0BAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAG;AACC,UAAMR,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE;AADA,KAAD,CAAT,CADD,CAIC;;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,kBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAVD,CAUC,OAAMC,GAAN,EAAU;AACP,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,kBADA,CAEN;;AAFM,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,YAAV,GAAwB;AACpB,QAAMT,UAAU,CAAC,kBAAD,EAAqBK,OAArB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAoB;AAC/B,QAAMd,GAAG,CAAC,CACNC,IAAI,CAACY,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, put, delay, takeLatest } from \"@redux-saga/core/effects\";\r\nimport axios from \"axios\";\r\n\r\nfunction postAddAPI(data){\r\n    return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* postAdd(action){\r\n    try{\r\n        yield put({\r\n            type: 'POST_ADD_REQUEST',\r\n        });\r\n        // const result = yield call(postAddAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'POST_ADD_SUCCESS',\r\n            // data: result.data\r\n        });\r\n    }catch(err){\r\n        yield put({\r\n            type: 'POST_ADD_FAILURE',\r\n            // data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest('ADD_POST_REQUEST', postAdd);\r\n}\r\n\r\nexport default function* postSage(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}